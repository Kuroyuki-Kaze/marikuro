/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */
plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id "io.freefair.lombok" version "6.5.1"
}

version '1.0-SNAPSHOT'

sourceCompatibility = 1.15

ext {
    lwjglVersion = '3.3.1'
    lwjglNatives = 'natives-windows'
    jomlVersion = '1.10.5'
    imguiVersion = '1.86.4'
    gsonVersion = '2.9.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
	implementation "org.lwjgl:lwjgl-glfw"
	implementation "org.lwjgl:lwjgl-nfd"
	implementation "org.lwjgl:lwjgl-openal"
	implementation "org.lwjgl:lwjgl-opengl"
	implementation "org.lwjgl:lwjgl-stb"
	runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-nfd::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
	implementation "org.joml:joml:${jomlVersion}"

    implementation "io.github.spair:imgui-java-binding:$imguiVersion"
    implementation "io.github.spair:imgui-java-lwjgl3:$imguiVersion"

    implementation "io.github.spair:imgui-java-natives-windows:$imguiVersion"

    implementation "com.google.code.gson:gson:$gsonVersion"

    // implementation "io.imgui.java:binding:$imguiVersion"
    // implementation "io.imgui.java:lwjgl3:$imguiVersion"

    // runtimeOnly "io.imgui.java:$lwjglNatives:$imguiVersion"
}

application {
    // Define the main class for the application.
    mainClass = 'marikuro.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()

    maxHeapSize = '1G'
    
    beforeTest {
        descriptor -> logger.debug("Running test: " + descriptor)
    }
    
    testLogging {
        events "failed"
        exceptionFormat "short"

        debug {
            events "started", "passed", "skipped", "failed"
            exceptionFormat "full"
        }

        info.events = ["started", "skipped", "failed", "skipped"]
        info.exceptionFormat = "full"
        showStandardStreams true
    }

    enableAssertions = true
}

run {
    enableAssertions = true
}